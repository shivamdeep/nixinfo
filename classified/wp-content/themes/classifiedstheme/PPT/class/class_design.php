<?php

/***************** DO NOT EDIT THIS FILE *************************
******************************************************************

INFORMATION:
------------

This is a core theme file, you should not need to edit 
this file directly. Code changes maybe lost during updates.

LAST UPDATED: June 26th 2011
EDITED BY: MARK FAIL
------------------------------------------------------------------

******************************************************************/

class PremiumPressTheme_Design { 


function GALLERYBLOCK(){

	global $wpdb, $PPT;
	$doFeatured = get_option('display_defaultorder');
	
	if($doFeatured == "meta_value&meta_key=featured*desc" && !isset($GLOBALS['setflag_article']) && !isset($GLOBALS['setflag_faq']) && !isset($_GET['s']) && !isset($_GET['search-class']) ){
	 
		$i =0;
		while($i < 2){
		
		if(strpos($GLOBALS['query_string'], "tag=") === false){ // DONT INCLUDE CATEGORY FOR TAG SEARCHES
		$cat = "cat=".$GLOBALS['premiumpress']['catID'];
		}else{
		$a = explode("tag=",$GLOBALS['query_string']);
		$b = explode("&",$a[1]);	
		$cat = "tag=".$b[0];		
		}		
		
		if($i ==0){ $GLOBALS['query_string_new'] .=  $cat."&meta_value=yes&orderby=rand&posts_per_page=50"; }else{ $GLOBALS['query_string_new'] .= $cat."&meta_value=no";  }
		$this->GALLERYBLOCKDO(); $GLOBALS['query_string_new']="";
		$i++;
		}
	
	}else{

		$this->GALLERYBLOCKDO();
	
	}

}

function GALLERYBLOCKDO(){

	global $wpdb, $PPT; $GLOBALS['counter'] = 1;  $galType = get_option('display_liststyle');

 
	// BUILD THE QUERY STRING 
	if(isset($GLOBALS['query_string_new'])){	
	$paged = (get_query_var('paged')) ? get_query_var('paged') : 1;
	$postslist = query_posts($GLOBALS['query_string_new']."&paged=".$paged);	
	}elseif(is_array($GLOBALS['query_string'])){
	$postslist = query_posts($GLOBALS['query_string']);
	}else{
	$postslist = $GLOBALS['query_data'];
	}
	

 	
    foreach ($postslist as $loopID => $post){ 
	
		$GLOBALS['post'] 	= $post;
 		
		if($post->post_type  !="article_type" && $post->post_type  !="faq_type" ){ //if($post->post_type  =="article_type" || $post->post_type  =="faq_type" ){
		
			
			// CHECK FOR THE WEBSITE LINK
			$link = $PPT->CheckLink($post);	
			
			// FEATURED
			$featured 	= get_post_meta($post->ID, "featured", true);
			if($featured == ""){ update_post_meta($post->ID, "featured", "no"); }
		
		}
		
		
		if(strtolower(constant('PREMIUMPRESS_SYSTEM')) == "directorypress"){
			// LOAD SOME GLOBAL VALUES FOR DISPLAY
			$GLOBALS['directorypress']['vps'] 				= get_option("display_search_publisher");
			$GLOBALS['directorypress']['custom1'] 			= get_option("display_custom_value1");
			$GLOBALS['directorypress']['custom2'] 			= get_option("display_custom_value2");
			if($GLOBALS['directorypress']['custom1'] != ""){
			$custom1 		= get_post_meta($post->ID, $GLOBALS['directorypress']['custom1'], true);
			}
			if($GLOBALS['directorypress']['custom2'] != ""){
			$custom2 		= get_post_meta($post->ID, $GLOBALS['directorypress']['custom2'], true);
			}
		}
		 
		
		
		// SHOW THE ITEM ARTICLE BLOCK
		if( ( $post->post_type  =="article_type" || $post->post_type  =="faq_type" ) && strtolower(constant('PREMIUMPRESS_SYSTEM')) == "realtorpress"){ 
	
			if(file_exists(str_replace("functions/","",THEME_PATH)."/themes/".$GLOBALS['premiumpress']['theme'].'/_item_article.php')){
							
				include(str_replace("functions/","",THEME_PATH)."/themes/".$GLOBALS['premiumpress']['theme'].'/_item_article.php');
							
			}else{
						
				include(TEMPLATEPATH ."/template_".strtolower(constant('PREMIUMPRESS_SYSTEM'))."/_item_article.php"); 
						
			}
						
		}elseif($galType == "gal"){ 
	
			if(file_exists(str_replace("functions/","",THEME_PATH)."/themes/".$GLOBALS['premiumpress']['theme'].'/_item_gallery.php')){
							
				include(str_replace("functions/","",THEME_PATH)."/themes/".$GLOBALS['premiumpress']['theme'].'/_item_gallery.php');
							
			}else{
						
				include(TEMPLATEPATH ."/template_".strtolower(constant('PREMIUMPRESS_SYSTEM'))."/_item_gallery.php"); 
						
			}
						
		}else{ 
						
			if(file_exists(str_replace("functions/","",THEME_PATH)."/themes/".$GLOBALS['premiumpress']['theme'].'/_item.php')){
							
				include(str_replace("functions/","",THEME_PATH)."/themes/".$GLOBALS['premiumpress']['theme'].'/_item.php');
							
			}else{
						
				include(TEMPLATEPATH ."/template_".strtolower(constant('PREMIUMPRESS_SYSTEM'))."/_item.php"); 
						
			}
						
						
		}  

	 	$GLOBALS['counter']++;   
					 
	  }
	  
}






	 
	 function GL_ALERT($message="",$type="sucesss"){	
	 
	 if(strlen($message) < 5){ return; } 	 
 
	 $code = '<div class="notification '.$type.'"><p>'.$message.'</p></div> ';	
	
	 return $code;
	 
	 }
	 
	 function GL_ORDERBY(){
	 
	 global $PPT, $wpdb;
	 
	 $code= "";
 
	 
	 if(!isset($GLOBALS['premiumpress']['catID'])){ $GLOBALS['premiumpress']['catID']=""; }
	 
	 if($GLOBALS['premiumpress']['catID'] == ""){ return; }
	 
	 	if(get_option("listbox_custom") =="1"){
	 
			 $code .= '<div class="dropui dropui-menu dropui-grey" style="float:right;"><a href="javascript:;" class="dropui-tab">'.get_option("listbox_custom_title").'</a><div class="dropui-content"><ul>';				
			
			$i=1; $a=0; $lv = explode("**",get_option("listbox_custom_string"));
			while($i < 10){
				
				$title = $lv[$a]; $a++;
				$key = $lv[$a]; $a++;
				$value = $lv[$a]; $a++;
				$extra = $lv[$a]; $a++;
				if(strlen($title) > 1){
				
				if(isset($_GET['s'])){ $extra .= "&s=".strip_tags($_GET['s']).""; }
				 
				$code .= '<li><a href="'.get_option('siteurl').'/index.php?cat='.$GLOBALS['premiumpress']['catID'].'&amp;orderby=meta_value&amp;key='.$key.'&amp;order='.$value.$extra.'" rel="nofollow">'.$title.'</a></li>';
				
				 } 
				  
			$i++; }
			
				$code .= '</ul></div></div>';
		
		}
	 
	 	return $code;
	 
	 }
	 
	 
	function Articles(){
			
		global $wpdb;
		$STRING = "";

		$paged = (get_query_var('paged')) ? get_query_var('paged') : 1;
		$posts = query_posts('post_type=article_type');		

		foreach($posts as $post){
 
		$STRING  .="<li><a href='".get_permalink($post->ID)."'>".$post->post_title."</a></li>";
		
		}

		wp_reset_query();
		
		print $STRING;
	
	}
	 
	function PACKAGES($current=99,$priceDifference=false){
	
		global $wpdb,$PPT;
		
		$STRING = ""; $i=1; $packdata = get_option("packages");
		
		//print_r($packdata[$i]['price']);

		foreach($packdata as $package){ 
		
			if($package['enable'] == 1){  
			
				if($current == $i){ $ex = 'selected'; }else{  $ex = ''; }
				
				
				if(isset($packdata[$i]['rec']) &&$packdata[$i]['rec'] ==1){ 
				
					$time =  "/".$packdata[$i]['expire']." ".$GLOBALS['_LANG']['_35_3'];  
				
				}elseif($packdata[$i]['price'] !="0" && $packdata[$i]['price'] !="" && $packdata[$i]['expire'] > 1){ 
				
				$time = "/".$packdata[$i]['expire']." ".$GLOBALS['_LANG']['_35_3']; 
				
				}else{
				
				}
			
		
				if($priceDifference){ 
				
					if(  $packdata[$i]['price'] >= $packdata[$current]['price'] ){
					
						$newPrice = $packdata[$i]['price'] - $packdata[$current]['price'];
						
						if($newPrice == 0){ $newPrice="0 / Same Package Price"; }
					
						$STRING  .="<option value='".$i."' ".$ex.">".$package['name']." (".$PPT->Price($newPrice,$GLOBALS['premiumpress']['currency_symbol'],$GLOBALS['premiumpress']['currency_position'],1)."".$time.")</option>";
					
					}
				
				}else{
				
				$STRING  .="<option value='".$i."' ".$ex.">".$package['name']." (".$PPT->Price($packdata[$i]['price'],$GLOBALS['premiumpress']['currency_symbol'],$GLOBALS['premiumpress']['currency_position'],1)."".$time.")</option>";
				
				}		
		
			} 
		
		$i++; }
 		
		return $STRING;	 
	
	}	
	
	 
	function MANAGE($id){

	global $wpdb;
	
	$PACKAGE_OPTIONS = get_option("packages");

	$pos = strpos($GLOBALS['premiumpress']['submit_url'], '?'); 
	if ($pos === false) {
		$elink = $GLOBALS['premiumpress']['submit_url']."?";
	} else {
		 $elink = $GLOBALS['premiumpress']['submit_url']."&";
	}	
 

	$pos = strpos($GLOBALS['premiumpress']['manage_url'], '?'); 
	if ($pos === false) {
		$mlink = $GLOBALS['premiumpress']['manage_url']."?";
	} else {
		 $mlink = $GLOBALS['premiumpress']['manage_url']."&";
	}	

	$content = ""; $pakSTRING = ""; 
	
	$SQL = "SELECT ID, post_title, post_date,post_status FROM $wpdb->posts, $wpdb->term_relationships, $wpdb->term_taxonomy	WHERE post_author = ".$id." AND $wpdb->term_relationships.object_id = $wpdb->posts.ID AND $wpdb->term_relationships.term_taxonomy_id = $wpdb->term_taxonomy.term_taxonomy_id AND $wpdb->posts.post_type = 'post' GROUP BY $wpdb->posts.ID ORDER BY $wpdb->posts.post_title ASC LIMIT 100";

	wp_reset_query();
 
	$last_posts = (array)$wpdb->get_results($SQL);

	foreach ($last_posts as $post) {
 
	$categories = get_the_category($post->ID); 
  	$type = get_post_meta($post->ID, "type", true);
	$package = get_post_meta($post->ID, "packageID", true);
	$expires = get_post_meta($post->ID, "expires", true);
	
	if($package > 0){
		$date_expires 	= strtotime(date("Y-m-d H:i:s", strtotime($post->post_date)) . " +".$expires." days");
		$expires		= date('Y-m-d H:i:s',$date_expires);
		$pakSTRING 		= "<br /><small><em>".strip_tags($PACKAGE_OPTIONS[$package]['name'])."</em>";
		if(substr($expires,0,4) == date("Y")){
		$pakSTRING 		.= "<br />Expires: ".$expires."</small>";
		}
	}
	
	
	 
	if($type != "article"){
    $content = $content.
			"<tr>
        	<td><b>" .	$post->post_title ."</b>".$pakSTRING. "</td>
            <td>";
			
			foreach($categories as $ThisCat){
				$content .= "<a href='".get_category_link( $ThisCat->term_id )."' target='_blank'>". $ThisCat->cat_name ."</a><br />";
			}

            $content .= "</td><td>".get_post_meta($post->ID, "hits", true)."</td>
        	<td align='center'><a href=\"" .get_permalink($post->ID) ."\">".$GLOBALS['_LANG']['_err16']."</a> | <a href='".$elink."eid=".$post->ID."'>".$GLOBALS['_LANG']['_err15']."</a> | ";
			
			if($post->post_status == "pending"){
			 $content .= "<div style='color:red;'>Pending Admin Approval</div>";
			
			}else{
			 $content .= " 
			<a href='".$mlink."eid=".$post->ID."&dd=1''>".$GLOBALS['_LANG']['_err14']."</a>";
			
			}
			
			 
			$content .= "</td>   </tr>";
	 }
	}
	wp_reset_query();
	
	return $content;	

}	 
 
	function TimeDiff($date,$style=1)
	{
	
	switch($style){
	
	case "1": {
	
		return date('l jS \of F h:i:s A',$date);
	
	} break;
	
	case "2" : {
	
			$then = strtotime($date);
		  	$now = time(); 
		  	$diff = $then - $now; 
			$weeks = floor($diff / (60*60*24*7)); 
			$diff = $diff - ($weeks * (60*60*24*7)); 
			
			$days = floor($diff / (60*60*24)); 
			$diff = $diff - ($days * (60*60*24)); 
			
			$hours = floor($diff / (60*60)); 
			$diff = $diff - ($hours * (60*60)); 
			
			$minutes = floor($diff / 60); 
			$diff = $diff - ($minutes * 60); 
			
			$secs = $diff; 
		  
			$out = ''; 
			if($weeks > 0) 
				$out .= $weeks . ' week(s), '; 
			if($days > 0) 
				$out .= $days . ' day(s), '; 
			if($hours > 0) 
				$out .= $hours . ' hour(s), '; 
			if($minutes > 0) 
				$out .= $minutes . ' minute(s), '; 
			if($secs > 0) 
				$out .= $secs . ' second(s) '; 
			$out .= 'left'; 
			
			return $out; 
	
	} break;
	
	
	case "3": {
	
		
		$periods       = array($GLOBALS['_LANG']["second"], $GLOBALS['_LANG']["minute"], $GLOBALS['_LANG']["hour"], $GLOBALS['_LANG']["day"], $GLOBALS['_LANG']["week"], $GLOBALS['_LANG']["month"], $GLOBALS['_LANG']["year"], $GLOBALS['_LANG']["decade"]);
		
		$lengths        = array("60","60","24","7","4.35","12","10");
	 
		$now             = time();
		$unix_date       = strtotime($date);
	 
		if(empty($unix_date)) {    
			return "Bad date";
		}
	 
		if($now > $unix_date) {    
			return "Auction Ended";
			$difference     = $now - $unix_date;
			$tense         = "ago";
	 
		} else {
			$difference     = $unix_date - $now;
			$tense         = "";
		}
	 
		for($j = 0; $difference >= $lengths[$j] && $j < count($lengths)-1; $j++) {
			$difference /= $lengths[$j];
		}
	 
		$difference = round($difference);
	 
		if($difference != 1) {
			$periods[$j].= "s";
		}
	 
		return "$difference $periods[$j] {$tense}";
	
	} break;	
	
	
	default: {
	
		return $date;
	}
	
	
	}
	
	
	

	}	 
	 
	 
	
	
	
	
	function SINGLE_CUSTOMFIELDS($post,$FieldValues){

	global $wpdb,$PPT;$row=1;

	if($FieldValues ==""){ 
		$FieldValues = get_option("customfielddata");
	}
 

	if(is_array($FieldValues)){ 

		foreach($FieldValues as $key => $field){

			if(isset($field['show']) && $field['enable'] == 1 ){ 				 
			
			$imgArray = array('jpg','gif','png');

			$value = $PPT->GetListingCustom($post->ID,$field['key'] ); 
 
			if(is_array($value) || strlen($value) < 1){   }else{			
		
				print "<div class='full clearfix border_t box'><p class='f_half left'><br />"; 
				print "<b>".$field['name']."</b></p><p class='f_half left'><br />";
		
				switch($field['type']){
				 case "textarea": {			
					print "<br />".nl2br(stripslashes($value));
				 } break;
				 case "list": {
					print  $value;
				 } break;
				 default: {
					
					$pos = strpos($value, 'http://'); 					
					if($field['key'] == "skype"){
						print "<a href='skype:".$value."?add'>" .  $value ."</a>";
					}elseif ($pos === false) {
						print  $value;
					}elseif(in_array(substr($value,-3),$imgArray)){
						print "<img src='".strip_tags($value)."' style='max-width:250px;margin-left:20px;'>";
					}else{
						print "<a href='".$value."' target='_blank'";
						if($GLOBALS['premiumpress']['nofollow'] =="yes"){ print 'rel="nofollow"'; }
						print ">" .  $value ."</a>";				
					} 
					
				 }
		
				}
				$row++;
				print "</p></div>";
				
				}

				} 
			}
		}
	
	}		
	
	
	
	
	
	
function GL_CustomKeyName($name=""){
	$FieldValues = get_option("customfielddata");	
	foreach($FieldValues as $key => $field){
		if($name == $field['key']){
			return $field['name'];
		}
	} 
}	
	
	
	
	
	 
	function GL_customfields($data,$packageID){

	global $wpdb, $PPT; $i = 0; $p = 0; $FieldValues = get_option("customfielddata");
	
	if(is_array($FieldValues)){ foreach($FieldValues as $key => $field){

		if(isset($field['enable']) && $field['enable'] == 1 && $field['show'] == 1 && ( isset($field['pack'.$packageID]) && $field['pack'.$packageID] == 1 || get_option('pak_enabled') ==0)  ){
	
			//if($p == 0){ echo '<div class="full clearfix border_t box">'; }
			
			echo '<p class="f_half left">
			<label>'.$field['name'].'</label><br />';
			
			switch($field['type']){
			 case "textarea": {
			 if(isset($_POST['action']) && !isset($data) ){ $dd = $_POST['custom'][$i]['value']; }elseif(isset($data)){ $dd = $PPT->GetListingCustom($_GET['eid'],$field['key']);  }else{ $dd = $field['value'];} 
				echo '<textarea class="short" name="custom['.$i.'][value]" rows="10" cols="48">';
				
				 echo str_replace("<br />","\n",$dd);
				echo '</textarea>';
				
			 } break;
			 case "list": {
				if(isset($data)){$listval = $PPT->GetListingCustom($_GET['eid'],$field['key'] ); }else{ $listval=""; }
				$listvalues = explode(",",$field['value']);
				echo '<select name="custom['.$i.'][value]">';
				foreach($listvalues as $value){ 
					if($listval ==  $value){ 
					echo '<option value="'.$value.'" selected>'.$value.'</option>'; 
					}else{
					echo '<option value="'.$value.'">'.$value.'</option>'; 
					}
				}
				echo '</select>';			
			 } break;
			 default: {	
				echo '<input type="text" class="short" name="custom['.$i.'][value]" size="55" value="';
				if(isset($_POST['action']) && !isset($data) ){ echo $_POST['custom'][$i]['value']; }elseif(isset($data)){ echo $PPT->GetListingCustom($_GET['eid'],$field['key'] );  }else{ echo $field['value'];} 
				echo '">';
			 }
			}
			
			if(strlen($field['desc2']) > 1){
			echo '<br /><small>'.$field['desc2'].'</small>';
			}
				
			echo '<input type="hidden"  name="custom['.$i.'][name]" value="'.$field['key'].'" /></p>'; 
			
			//if($p == 1){ echo '</div>'; $p=0; }else{ $p++; } 
			
			$i++;
			 
			
		}
	  } 
	 }
	}	 
	 
	 
	function GL_GetCustomFields($post,$FieldValues){

	global $wpdb,$PPT; $row=1;

	if($FieldValues ==""){ 
		$FieldValues = get_option("customfielddata");
	}

	if(is_array($FieldValues)){ 

		foreach($FieldValues as $key => $field){

			if(isset($field['show']) && $field['show'] == 1 ){ 				 
			
			$imgArray = array('jpg','gif','png');

			$value = $PPT->GetListingCustom($post->ID,$field['key'] );
 
			if(is_array($value) || strlen($value) < 1){   }else{			
		
				print '<tr class="dashed"><td class="w14 padded">';
				
				print "<span><b>".$field['name']."</b></span> </td><td class='w34 padded'>";
		
				switch($field['type']){
				 case "textarea": {			
					print "<br />".nl2br(stripslashes($value));
				 } break;
				 case "list": {
					print  $value;
				 } break;
				 default: {
					
					$pos = strpos($value, 'http://'); 					
					if($field['key'] == "skype"){
						print "<a href='skype:".$value."?add'>" .  $value ."</a>";
					}elseif ($pos === false) {
						print  $value;
					}elseif(in_array(substr($value,-3),$imgArray)){
						print "<img src='".strip_tags($value)."' style='max-width:250px;margin-left:20px;'>";
					}else{
						print "<a href='".$value."' target='_blank'";
						if($GLOBALS['directorypress']['nofollow'] =="yes"){ print 'rel="nofollow"'; }
						print ">" .  $value ."</a>";				
					} 
					
				 }
		
				}
				$row++;
				print "</td>
							</tr>";
				
				}

				} 
			}
		}
	
	}	 
	
	
	function TPLADD_Value($key,$value){
	
		$STRING = "";
	
		switch(trim($key)){
 
					
			case "description":{
			
				$STRING = nl2br($value);
			
			} break;
			
			case "short":{
			 
				$STRING = "".nl2br($value)."";
			
			} break;			
			default: {
			
				$STRING = strip_tags($value);		
			
			}	
		
		}
		
		return PPTOUTPUT($STRING,$key);
	
	} 
	
	
	
	
	
	
	
	
	function SLIDER($sliderID=1){
	
	global $PPT, $wpdb; $STRING = "";
	
 
		if(get_option("PPT_slider_items") =="featured"){
		
		$sliderData = query_posts('meta_key=featured&meta_value=yes');		
		
		if(!is_array($sliderData) || count($sliderData) == 0 ){ return ""; }
		
		switch($sliderID){
		
			case "1": {
			
					$STRING .= '<div id="preFeature">';	
					
					 
					$sortedSlider = $this->array_sort($sliderData, 'post_title', SORT_ASC);
					$i=0; foreach($sortedSlider as $slide){
					
					if(get_post_meta($slide->ID, 'featured_image', true) != ""){ $imgT = "full"; }else{ $imgT = "url"; }
					
					$STRING .= '<div>
				
							<img src="'.$PPT->Image($slide,$imgT).'&amp;w=650&amp;h=265" title="'.substr(strip_tags($slide->post_excerpt),0,45).'.." alt="'.strip_tags(str_replace('"',"",$slide->post_excerpt)).'" />							
							
								<h3><a href="'.get_permalink($slide->ID).'" target="_blank" title="'.$slide->post_title.'">'.substr(stripslashes($slide->post_title),0,25).'</a></h3>
					
								<p>'.strip_tags(nl2br(stripslashes($slide->post_excerpt))).'</p>
							
						</div>';
						
					}
						
					$STRING .= '</div>';
					
					
			} break;
			
			case "2": {
			
			
					$STRING .= '<div id="featured-item"><ul id="featured-itemContent">';
					
					$sortedSlider = $this->array_sort($sliderData, 'order', SORT_ASC);
					$i=0; foreach($sortedSlider as $slide){ 
					
					if(get_post_meta($slide->ID, 'featured_image', true) != ""){ $imgT = "full"; }else{ $imgT = "url"; }
										
					$STRING .= '<li class="featured-itemImage">                
						<a href="'.get_permalink($slide->ID).'" target="_blank" title="'.strip_tags($slide->post_excerpt).'">
						<img src="'.$PPT->Image($slide,$imgT).'&amp;w=695" alt="'.$slide->post_title.'" />                 
							<span>                       
							   <strong>'.stripslashes($slide->post_title).'</strong>            
							   <b>'.strip_tags(stripslashes($slide->post_excerpt)).' <br /> </b> 
							 </span>
						</a>
					  </li>';
					
					}
					
					$STRING .= '<li class="clear featured-itemImage">&amp;&amp;</li></ul></div>';	
					wp_reset_query();
					return $STRING;
			
			} break;
				
		}
		
		}else{
		
		$sliderData = get_option("slider_array");
 
		if(!is_array($sliderData) || count($sliderData) == 0 ){ return ""; }
		
		switch($sliderID){
		
			case "1": {
			
					$STRING .= '<div id="preFeature">';				
					
					$sortedSlider = $this->array_sort($sliderData, 'order', SORT_ASC);
					$i=0; foreach($sortedSlider as $slide){  
					
					if(get_post_meta($slide->ID, 'featured_image', true) != ""){ $imgT = "full"; }else{ $imgT = "t"; }
					
					$STRING .= '<div>
				
							<img src="'.$PPT->ImageCheck($slide['s2'],$imgT).'&amp;w=650&amp;h=265" title="'.$slide['s3'].'" alt="'.str_replace('"',"",$slide['s3']).'" />							
							
								<h3><a href="'.$slide['s5'].'" target="_blank" title="'.$slide['s3'].'">'.substr(stripslashes($slide['s1']),0,25).'</a></h3>
					
								<p>'.strip_tags(nl2br(stripslashes($slide['s4']))).'</p>
							
						</div>';
						
					}
						
					$STRING .= '</div>';
					
					
			} break;
			
			case "2": {
			
			
					$STRING .= '<div id="featured-item"><ul id="featured-itemContent">';
					
					$sortedSlider = $this->array_sort($sliderData, 'order', SORT_ASC);
					$i=0; foreach($sortedSlider as $slide){ 
					
					if(get_post_meta($slide->ID, 'featured_image', true) != ""){ $imgT = "full"; }else{ $imgT = "t"; }
										
					$STRING .= '<li class="featured-itemImage">                
						<a href="'.$slide['s5'].'" target="_blank" title="'.$slide['s3'].'">
						<img src="'.$PPT->ImageCheck($slide['s2'],$imgT).'&amp;w=695" alt="'.$slide['s3'].'" />                 
							<span>                       
							   <strong>'.stripslashes($slide['s3']).'</strong>            
							   <b>'.strip_tags($slide['s4']).' <br /> </b> 
							 </span>
						</a>
					  </li>';
					
					}
					
					$STRING .= '<li class="clear featured-itemImage">&amp;&amp;</li></ul></div>';	
					wp_reset_query();
					return $STRING;
			
			} break;
				
		}				
		
		}		
		wp_reset_query();
		return $STRING;
	
	
	}
	
	
	function array_sort($array, $on, $order=SORT_ASC)
{
    $new_array = array();
    $sortable_array = array();

    if (count($array) > 0) {
        foreach ($array as $k => $v) {
            if (is_array($v)) {
                foreach ($v as $k2 => $v2) {
                    if ($k2 == $on) {
                        $sortable_array[$k] = $v2;
                    }
                }
            } else {
                $sortable_array[$k] = $v;
            }
        }

        switch ($order) {
            case SORT_ASC:
                asort($sortable_array);
            break;
            case SORT_DESC:
                arsort($sortable_array);
            break;
        }

        foreach ($sortable_array as $k => $v) {
            $new_array[$k] = $array[$k];
        }
    }

    return $new_array;
}

	function SideBarNavigationBox($type=0){
	
			$catlist="";
			$TabsCat = get_option("display_tabbed_cats");
	 		$catCount = get_option("display_categories_count");
			$catCount1 = get_option("display_categories_count_inner");
			$Maincategories= get_categories('pad_counts=1&use_desc_for_title=1&hide_empty=0&hierarchical=0&exclude='.str_replace("-","",$GLOBALS['premiumpress']['excluded_articles'].",".$GLOBALS['premiumpress']['excluded_articles']));
			
			$Maincatcount = count($Maincategories);	 
	
			$i=1;
			foreach ($Maincategories as $Maincat) { if(strlen($Maincat->name) > 1){ 
	 
			if($Maincat->parent ==0){
			
	
					$categories= get_categories('child_of='.$Maincat->cat_ID.'&depth=1&hide_empty=0&hierarchical=0&exclude='.str_replace("-","",$GLOBALS['premiumpress']['excluded_articles']).",".str_replace("-","",$GLOBALS['premiumpress']['excluded_articles'])); 
					$catcount = count($categories);	
					
					if($TabsCat =="yes"){
						if($catcount ==0){ 
							$ThisLink = get_category_link( $Maincat->term_id );   $class="";
						}else{
							$ThisLink = "javascript:toggleLayer('DropList".$i."')";   $class="AA";
						}
					}else{
						$ThisLink = get_category_link( $Maincat->term_id );   $class="";
					}
	
					$ThisClass = ($i == count($Maincategories) - 1) ? '' : ''; //last
					$catlist .= '<li class="'.$ThisClass.$class.'">  <a href="'.$ThisLink.'" title="'.$Maincat->category_nicename.'">';
					$catlist .= $Maincat->name;
					if($catCount =="yes"){ $catlist .= " (".$Maincat->count.")"; }
					$catlist .= '</a>';
								 
			
					// do sub cats
					$currentcat=get_query_var('cat');				

					if(count($categories) > 0){
					$catlist .="<ul id='DropList".$i."' style='display:none;'>";
					if($class == "AA"){ 
						$catlist .= "<li class='sub'><a href='".get_category_link( $Maincat->term_id )."'>".$Maincat->name;
						if($catCount1 =="yes"){ $catlist .= " (".$Maincat->count.")"; }
						$catlist .=  "</a></li>"; 
					}
						foreach ($categories as $cat) {		
					
							$catlist .= '<li class="sub '.$ThisClass.'"> <a href="'.get_category_link( $cat->term_id ).'">';
							$catlist .= $cat->cat_name;
							if($catCount1 =="yes"){ $catlist .= " (".$cat->count.")"; }
							$catlist .= '</a></li>';
							 
							$i++;		
						}
					 $catlist .="</ul>";
					}
		
				$catlist .= '</li>';
				$i++;
			} 
	 } }
	 
	 
	 
	 
	 
	 
	wp_reset_query();
	return $catlist;
	
	}

 
	function HomeCategories($r=1){
	
		$SHOWCATCOUNT = get_option("display_categories_count");
		 
		$SHOW_SUBCATS = get_option("display_50_subcategories");
	
	 
			if( isset($GLOBALS['premiumpress']['catID']) ){ 
			
				$arg= array();
				$arg['child_of'] = $GLOBALS['premiumpress']['catID'];
				$arg['hide_empty'] = false;
				$arg['pad_counts'] = 1;
				$arg['exclude'] = str_replace("-","",$GLOBALS['premiumpress']['excluded_articles']);
				$Maincategories = get_categories( $arg );
 
			}elseif(is_front_page()){ 
			
				$Maincategories = get_categories('orderby='.get_option("display_homecats_orderby").'&pad_counts=1&use_desc_for_title=1&hide_empty=0&hierarchical=0&child_of=0&exclude='.str_replace("-","",$GLOBALS['premiumpress']['excluded_articles'])); 
					 	  
			}else{
			
				return "";
			
			} 
	 
	
			if(isset($Maincategories)){
	
			$catlist=""; 
			$Maincatcount = count($Maincategories);	
	
			if($Maincatcount > 0){ $catlist .= '<div class="homeCategories"><ul>';}
	 
				foreach ($Maincategories as $Maincat) { if(strlen($Maincat->name) > 1){ 
		 
		 
					if(is_home() && $Maincat->parent ==0){		
							
						$catlist .= '<li><span><a href="'.get_category_link( $Maincat->term_id ).'" title="'.$Maincat->category_nicename.'" class="suba"><b>';
						$catlist .= $Maincat->name;
						if($SHOWCATCOUNT =="yes"){ $catlist .= " (".$Maincat->count.')</b></a></span>'; }else{ $catlist .= '</b></a></span>'; }
						//$catlist .= '</span></a>';		
	
							if($SHOW_SUBCATS == "yes"){
							
								$categories= get_categories('child_of='.$Maincat->cat_ID.'&amp;depth=1&hide_empty=0&exclude='.str_replace("-","",$GLOBALS['premiumpress']['excluded_articles'])); 
								$catcount = count($categories);	
								
							 	$stopShow=0;
								$currentcat=get_query_var('cat');	
								if(count($categories) > 0){
								$catlist .= '<div style="margin-left:10px; margin-bottom:30px;">';
									foreach ($categories as $cat) { if($stopShow < 3){
										$catlist .= '<a href="'.get_category_link( $cat->term_id ).'" title="'.$cat->cat_name.'" class="sm">';
										$catlist .= $cat->cat_name;
										//if(get_option("display_categories_count") =="yes"){ $catlist .= " (".$cat->count.")"; }
										$catlist .= '</a> ';
										} $stopShow++;
									}
									$catlist .= '</div>';
								}	 
								
							}
						
						 $catlist .= '</li>';
						
					} elseif(!is_home() && isset($GLOBALS['premiumpress']['catID']) && $Maincat->category_parent == $GLOBALS['premiumpress']['catID']){
			
						$catlist .= '<li><span><a href="'.get_category_link( $Maincat->term_id ).'" title="'.$Maincat->category_nicename.'" class="suba"><b>';
						$catlist .= $Maincat->name;
						if($SHOWCATCOUNT =="yes"){ $catlist .= " (".$Maincat->count.')</b></a></span>'; }else{ $catlist .= '</b></a></span>'; }
						//$catlist .= '</span></a>';
						
							if($SHOW_SUBCATS == "yes"){
							
								$categories= get_categories('child_of='.$Maincat->cat_ID.'&amp;depth=1&hide_empty=0&exclude='.str_replace("-","",$GLOBALS['premiumpress']['excluded_articles'])); 
								$catcount = count($categories);	
								
							 
								$currentcat=get_query_var('cat');	
								if(count($categories) > 0){
								$catlist .= '<div style="margin-left:10px; margin-bottom:30px;">';
									foreach ($categories as $cat) {
										$catlist .= '<a href="'.get_category_link( $cat->term_id ).'" class="sm">';
										$catlist .= $cat->cat_name;
										//if(get_option("display_categories_count") =="yes"){ $catlist .= " (".$cat->count.")"; }
										$catlist .= '</a> ';
									}
									$catlist .= '</div>';
								}	 
								
							}					
						
						
						
						
						$catlist .= '</li>';
			
					}
				}
			}
		
	
			if($Maincatcount > 0){ $catlist .= '</ul><div class="clearfix"></div></div>'; }
			wp_reset_query();
			if($r == 1){ echo $catlist; }else{return $catlist; }
	
			}	
		 
	
	}
	
	
 function CanDisplayElement($value){
  
  global $post; global $wpdb;
  
	if($value == "0" || $value == ""){ return true; }
	 
	if( ( is_home() || is_front_page() ) && $value == "no-home"){
	
	 return false;
	}
	
	if(is_single() && !isset($GLOBALS['LISTINGPAGEMARKER']) && $value == "no-single"){
	 return false;
	}
	
	if(isset($GLOBALS['LISTINGPAGEMARKER']) && $value == "no-listing"){
	 return false;
	}
	
	if(is_page() && $value == "no-page"){
	 return false;
	}
	
 return true;

}
	
}	

?>